---
- name: Installing OS pkg dependencies
  become: true
  become_user: root
  ansible.builtin.package:
    state: present
    name: '{{ anaconda_dep_pkgs | default([]) }}'

- name: Check for installation at {{ anaconda_install_exe }}
  become: true
  stat:
    path: '{{ anaconda_install_exe }}'
  changed_when: false
  register: anaconda_conda_binary

- name: Downloading and installing anaconda
  when: not anaconda_conda_binary.stat.exists
  block:
    - name: Ensure that {{ anaconda_tmp_dir }} directory exists
      ansible.builtin.file:
        path: "{{ anaconda_tmp_dir }}"
        state: directory
        mode: '755'

    - name: Downloading {{ anaconda_installer_url }} to {{ anaconda_installer_tmp_sh }}
      become: true
      become_user: root
      ansible.builtin.get_url:
        url: '{{ anaconda_installer_url }}'
        dest: '{{ anaconda_installer_tmp_sh }}'
        timeout: '{{ anaconda_timeout_seconds }}'
        checksum: '{{ anaconda_checksum }}'
        mode: '755'

    - name: Launching installer {{ anaconda_installer_tmp_sh }} with bash
      become: true
      become_user: root
      shell: |-
        [ -n "{{ anaconda_umask }}" ] && umask {{ anaconda_umask }};
        TMPDIR={{ anaconda_tmp_dir }} \
          bash "{{ anaconda_installer_tmp_sh }}" \
          -b \
          -p "{{ anaconda_install_dir }}";
      args:
        creates: '{{ anaconda_install_dir }}'

  always:
    - name: Rm {{ anaconda_installer_tmp_sh }}
      become: true
      become_user: root
      ansible.builtin.file:
        path: '{{ anaconda_installer_tmp_sh }}'
        state: absent

- name: Linking {{ anaconda_link_dir }} to {{ anaconda_install_dir }}
  become: true
  become_user: root
  ansible.builtin.file:
    src: '{{ anaconda_install_dir }}'
    dest: '{{ anaconda_link_dir }}'
    state: link

- name: Updating all conda pkgs...
  become: true
  become_user: root
  when: anaconda_pkg_update
  shell: |-
    [ -n "{{ anaconda_umask }}" ] && umask {{ anaconda_umask }};
    {{ anaconda_conda_bin }} update -y --all;

- name: Remove conda-curl since it conflicts with the system curl
  become: true
  become_user: root
  conda:
    name: curl
    state: absent
    executable: '{{ anaconda_conda_bin }}'

- name: Make system default python etc...
  become: true
  become_user: root
  when: anaconda_make_sys_default
  loop:
    - f: anaconda.sh
      d: /etc/profile.d
  loop_control:
    loop_var: tt
  template:
    src: '{{ tt.f }}.j2'
    dest: '{{ tt.d }}/{{ tt.f }}'
    mode: '{{ tt.m | default("644") }}'

- name: Installing additional conda packages
  become: true
  become_user: root
  loop: '{{ anaconda_install_packages | default([]) }}'
  conda:
    name: '{{ item }}'
    state: present
    executable: '{{ anaconda_conda_bin }}'
    channels: '{{ anaconda_install_channels | default("") }}'
